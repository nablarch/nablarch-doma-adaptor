group = 'com.nablarch.integration'
version = '0.0.3'
description = 'DomaによるDBアクセス機能の拡張実装'

repositories {
  mavenLocal()
  maven { url "${developLibUrl}" }
  jcenter()
}

buildscript {
  ext.kotlin_version = '1.1.2'
  repositories {
    mavenLocal()
    maven { url "${developLibUrl}" }
    jcenter()
  }
  dependencies {
    classpath "com.nablarch.dev:nablarch-gradle-plugin:${nablarchGradlePluginVersion}"
    classpath "net.saliman:gradle-cobertura-plugin:2.2.3"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}
apply plugin: 'kotlin'

apply {
  plugin 'com.nablarch.dev.nablarch-build'
  plugin 'com.nablarch.dev.nablarch-sonarqube'
  plugin 'com.nablarch.dev.nablarch-maven-deploy'
  plugin 'com.nablarch.dev.nablarch-version'
  from 'https://github.com/nablarch/nablarch-gradle-plugin/blob/develop/scripts/cobertura/cobertura-0.0.1.gradle?raw=true'
}

// ビルド時のJavaバージョンを指定する
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
  provided 'javax.batch:javax.batch-api:1.0'
  provided 'javax.inject:javax.inject:1'
  provided 'javax.enterprise:cdi-api:1.1'
  compile 'org.seasar.doma:doma:2.16.0'
  provided "com.nablarch.framework:nablarch-fw-batch-ee:${nablarchFwBatchEeVersion}"

  compile "com.nablarch.framework:nablarch-core-repository:${nablarchCoreRepositoryVersion}"

  testCompile 'org.jmockit:jmockit:1.30'
  testCompile 'junit:junit:4.12'
  testCompile 'org.assertj:assertj-core:3.6.2'
  testCompile 'com.h2database:h2:1.4.194'
  testCompile 'com.nablarch.dev:nablarch-test-support:0.0.7'

  testCompile 'org.glassfish.main.extras:glassfish-embedded-all:4.1'
  testCompile 'org.jboss.arquillian.junit:arquillian-junit-container:1.0.0.Final'
  testCompile 'org.jboss.arquillian.container:arquillian-glassfish-embedded-3.1:1.0.0.CR4'
  testCompile 'org.slf4j:jul-to-slf4j:1.7.22'
  testCompile 'ch.qos.logback:logback-classic:1.1.9'
  testRuntime 'log4j:log4j:1.2.17'
  compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}

test {
  ignoreFailures = true
  exclude '**/JBatchIntegration*'
  reports.html.enabled = false
}

task integrationTest(type: Test) {
  group = JavaBasePlugin.VERIFICATION_GROUP
  
  mustRunAfter test
  include '**/JBatchIntegration*'
  
  reports.html.enabled = false
}


task testReport(type: TestReport) {
  destinationDir = file("$buildDir/reports/tests")
  reportOn(test, integrationTest)
}

test.finalizedBy integrationTest
integrationTest.finalizedBy testReport


wrapper {
  gradleVersion = '2.13'
}

// JavaクラスとSQLファイルの出力先ディレクトリを同じにする
processResources.destinationDir = compileJava.destinationDir
processTestResources.destinationDir = compileTestJava.destinationDir
// コンパイルより前にSQLファイルを出力先ディレクトリにコピーするために依存関係を逆転する
compileJava.dependsOn processResources
compileTestJava.dependsOn processTestResources

// モジュールの出力先ディレクトリをcompileJava.destinationDirに変更
idea.module.outputDir = compileJava.destinationDir
idea.module.testOutputDir = compileTestJava.destinationDir
